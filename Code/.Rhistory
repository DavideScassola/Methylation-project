lista_speciale[sig==1, ]
lista_speciale[lista_speciale$sig==1]
lista_speciale[lista_speciale$sig==1, ]
show_fragment_info(6274001, 1e3, data_H1, discretize = T)
show_fragment_info(6274001, 1e3, data_H1, discretize = F)
show_fragment_info(18249001, 1e3, data_H1, discretize = F)
show_fragment_info(18249001, 1e3, data_H1, discretize = T)
show_fragment_info(18249001, 1e3, data_H1, discretize = T)
show_fragment_info(18249001, 1e3, data_H1, discretize = F)
show_fragment_info(26146001, 1e3, data_H1, discretize = F)
special_data = filter_by_significance(H1_fragments_table[[2]], alpha = 0)
special_data
show_fragment_info(100001, 1e4, data_H1, discretize = F); k=0; k=k+1
show_fragment_info(100001, 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(100001, 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F);k=1; k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k], 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k]+3e4, 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k]+3e4, 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k]+3e4, 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k]+3e4, 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k]+3e4, 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k]+3e4, 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k]+3e4, 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k]+3e4, 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k]+3e4, 1e4, data_H1, discretize = F); k=k+1
show_fragment_info(lista_speciale$start[k]+3e4, 1e4, data_H1, discretize = F); k=k+1
min_reads = 5
mask = data_H1$reads>=min_reads & data_stomach$reads>=min_reads
p1 = data_H1[mask, prop]
p2 = data_stomach[mask, prop]
cor.test(p1,p2)
plot(p1[1:1000], p2[1:1000])
plot(p1[1:10000], p2[1:10000])
############################################
# correlation at base level methylation
base_level_meth_correlation <- function(data1, data2, min_reads = 10)
{
mask = data_H1$reads>=min_reads & data_stomach$reads>=min_reads
p1 = data1[mask, prop]
p2 = data2[mask, prop]
cor.test(p1,p2)
}
base_level_meth_correlation(data_H1, data_stomach)
############################################
# correlation at base level methylation
base_level_meth_correlation <- function(data1, data2, min_reads = 10)
{
mask = data1$reads>=min_reads & data2$reads>=min_reads
p1 = data1[mask, prop]
p2 = data2[mask, prop]
cor.test(p1,p2)
}
gc()
base_level_meth_correlation(data_H1, data_stomach)
base_level_meth_correlation(data_H1, data_stomach, min_reads = 1)
base_level_meth_correlation(data_H1, data_stomach, min_reads = 100)
############################################
# correlation at base level methylation
base_level_meth_correlation <- function(data1, data2, min_reads = 10)
{
mask = data1$reads>=min_reads & data2$reads>=min_reads
p1 = data1[mask, prop]
p2 = data2[mask, prop]
cor.test(p1,p2)
if(length(p1)<1e5)
plot(p1,p2)
}
base_level_meth_correlation(data_H1, data_stomach, min_reads = 100)
############################################
# correlation at base level methylation
base_level_meth_correlation <- function(data1, data2, min_reads = 10)
{
mask = data1$reads>=min_reads & data2$reads>=min_reads
p1 = data1[mask, prop]
p2 = data2[mask, prop]
cor.test(p1,p2)
if(length(p1)<1e5)
plot(p1,p2, col=alpha(1, 0.5))
}
base_level_meth_correlation(data_H1, data_stomach, min_reads = 100)
base_level_meth_correlation(data_H1, data_stomach, min_reads = 1000)
############################################
# correlation at base level methylation
base_level_meth_correlation <- function(data1, data2, min_reads = 10)
{
mask = data1$reads>=min_reads & data2$reads>=min_reads
p1 = data1[mask, prop]
p2 = data2[mask, prop]
if(length(p1)<1e5)
plot(p1,p2, col=alpha(1, 0.5))
cor.test(p1,p2)
}
base_level_meth_correlation(data_H1, data_stomach, min_reads = 1000)
base_level_meth_correlation(data_H1, data_stomach, min_reads = 100)
############################################
# correlation at base level methylation
base_level_meth_correlation <- function(data1, data2, min_reads = 10)
{
mask = data1$reads>=min_reads & data2$reads>=min_reads
p1 = data1[mask, prop]
p2 = data2[mask, prop]
if(length(p1)<1e5)
plot(p1,p2, col=alpha(1, 0.5))
cor.test(p1,p2)
t = table(p1,p2)
print("Table:", t)
}
############################################
# correlation at base level methylation
base_level_meth_correlation <- function(data1, data2, min_reads = 10)
{
mask = data1$reads>=min_reads & data2$reads>=min_reads
p1 = data1[mask, prop]
p2 = data2[mask, prop]
if(length(p1)<1e5)
plot(p1,p2, col=alpha(1, 0.5))
cor.test(p1,p2)
t = table(round(p1/100),round(p2/100))
print("Table:", t)
}
base_level_meth_correlation(data_H1, data_stomach)
############################################
# correlation at base level methylation
base_level_meth_correlation <- function(data1, data2, min_reads = 10)
{
mask = data1$reads>=min_reads & data2$reads>=min_reads
p1 = data1[mask, prop]
p2 = data2[mask, prop]
if(length(p1)<1e5)
plot(p1,p2, col=alpha(1, 0.5))
cor.test(p1,p2)
t = table(round(p1/100),round(p2/100))
cat("Table:", t)
}
base_level_meth_correlation(data_H1, data_stomach, min_reads = 1000)
############################################
# correlation at base level methylation
base_level_meth_correlation <- function(data1, data2, min_reads = 10)
{
mask = data1$reads>=min_reads & data2$reads>=min_reads
p1 = data1[mask, prop]
p2 = data2[mask, prop]
if(length(p1)<1e5)
plot(p1,p2, col=alpha(1, 0.5))
cor.test(p1,p2)
t = table(round(p1/100),round(p2/100))
print("Table:", t)
}
base_level_meth_correlation(data_H1, data_stomach, min_reads = 1000)
############################################
# correlation at base level methylation
base_level_meth_correlation <- function(data1, data2, min_reads = 10)
{
mask = data1$reads>=min_reads & data2$reads>=min_reads
p1 = data1[mask, prop]
p2 = data2[mask, prop]
if(length(p1)<1e5)
plot(p1,p2, col=alpha(1, 0.5))
cor.test(p1,p2)
t = table(round(p1/100),round(p2/100))
print("Table:", t, digits=7)
}
base_level_meth_correlation(data_H1, data_stomach, min_reads = 1000)
############################################
# correlation at base level methylation
base_level_meth_correlation <- function(data1, data2, min_reads = 10)
{
mask = data1$reads>=min_reads & data2$reads>=min_reads
p1 = data1[mask, prop]
p2 = data2[mask, prop]
if(length(p1)<1e5)
plot(p1,p2, col=alpha(1, 0.5))
cor.test(p1,p2)
t = table(round(p1/100),round(p2/100))
print(t)
}
base_level_meth_correlation(data_H1, data_stomach, min_reads = 1000)
############################################
# correlation at base level methylation
base_level_meth_correlation <- function(data1, data2, min_reads = 10)
{
mask = data1$reads>=min_reads & data2$reads>=min_reads
p1 = data1[mask, prop]
p2 = data2[mask, prop]
if(length(p1)<1e5)
plot(p1,p2, col=alpha(1, 0.5))
print(cor.test(p1,p2))
t = table(round(p1/100),round(p2/100))
print(t)
}
base_level_meth_correlation(data_H1, data_stomach)
############################################
# correlation at base level methylation
base_level_meth_correlation <- function(data1, data2, min_reads = 10)
{
mask = data1$reads>=min_reads & data2$reads>=min_reads
p1 = data1[mask, prop]
p2 = data2[mask, prop]
if(length(p1)<1e5)
plot(p1,p2, col=alpha(1, 0.5))
print(cor.test(p1,p2))
t = table(round(p1/100),round(p2/100))
cat("Table:\n")
print(t)
cat("proportion table:\n")
print(prop.table(t))
}
base_level_meth_correlation(data_H1, data_stomach)
############################################
# correlation at base level methylation
base_level_meth_correlation <- function(data1, data2, min_reads = 10)
{
mask = data1$reads>=min_reads & data2$reads>=min_reads
p1 = data1[mask, prop]
p2 = data2[mask, prop]
if(length(p1)<1e5)
plot(p1,p2, col=alpha(1, 0.5))
print(cor.test(p1,p2))
t = table(round(p1/100),round(p2/100))
cat("Table:\n")
print(t)
cat("proportion table:\n")
print(prop.table(t))
}
base_level_meth_correlation(data_H1, data_stomach, 1000)
base_level_meth_correlation(data_H1, data_stomach, 100)
############################################
# correlation at base level methylation
base_level_meth_correlation <- function(data1, data2, min_reads = 10)
{
mask = data1$reads>=min_reads & data2$reads>=min_reads
p1 = data1[mask, prop]
p2 = data2[mask, prop]
if(length(p1)<1e5)
plot(p1,p2, col=alpha(1, 0.5))
print(cor.test(p1,p2))
t = table(round(p1/100),round(p2/100))
cat("Table:\n")
print(t)
cat("\n\nproportion table:\n")
print(prop.table(t))
coherent_sites_prop = prop.table(t)[1] + prop.table(t)[4]
cat("coherent_sites_prop: ", coherent_sites_prop)
different_sites_num = (t)[2] + (t)[3]
cat("different_sites_num: ", different_sites_num)
}
base_level_meth_correlation(data_H1, data_stomach, 100)
############################################
# correlation at base level methylation
base_level_meth_correlation <- function(data1, data2, min_reads = 10)
{
mask = data1$reads>=min_reads & data2$reads>=min_reads
p1 = data1[mask, prop]
p2 = data2[mask, prop]
if(length(p1)<1e5)
plot(p1,p2, col=alpha(1, 0.5))
print(cor.test(p1,p2))
t = table(round(p1/100),round(p2/100))
cat("Table:\n")
print(t)
cat("\n\nproportion table:\n")
print(prop.table(t))
coherent_sites_prop = prop.table(t)[1] + prop.table(t)[4]
cat("\ncoherent_sites_prop: ", coherent_sites_prop)
different_sites_num = (t)[2] + (t)[3]
cat("\ndifferent_sites_num: ", different_sites_num)
}
base_level_meth_correlation(data_H1, data_stomach, 100)
base_level_meth_correlation(data_H1, data_stomach, 10)
base_level_meth_correlation(data_H1, data_stomach, 1)
############################################
# correlation at base level methylation
base_level_meth_correlation <- function(data1, data2, min_reads = 10)
{
mask = data1$reads>=min_reads & data2$reads>=min_reads
p1 = data1[mask, prop]
p2 = data2[mask, prop]
if(length(p1)<1e5)
plot(p1,p2, col=alpha(1, 0.5))
print(cor.test(p1,p2))
t = table(round(p1/100),round(p2/100))
cat("Table:\n")
print(t)
cat("\n\nproportion table:\n")
print(prop.table(t))
coherent_sites_prop = prop.table(t)[1] + prop.table(t)[4]
cat("\ncoherent_sites_prop: ", coherent_sites_prop)
different_sites_num = (t)[2] + (t)[3]
cat("\ndifferent_sites_num: ", different_sites_num)
}
macroscopic_correlation(total_exp$`H1_inverted:_FALSE`, total_exp$`stomach_inverted:_FALSE`, names)
# macroscopic correlation
macroscopic_correlation <- function(exp1, exp2, names)
{
windows = c("1e3", "1e4", "1e5", "1e6")
for(i in 1:length(windows))
{
density1= exp1[[i]]$data$fragments_infos_array[,2]
msr1 = exp1[[i]]$data$fragments_infos_array[,3]
density2= exp2[[i]]$data$fragments_infos_array[,2]
msr2 = exp2[[i]]$data$fragments_infos_array[,3]
title = paste("densities comaparison", windows[i], "  corr:", round(cor.test(density1, density2)$estimate,2))
plot(density1, density2, main = title, xlab = names[1], ylab = names[2])
print(cor.test(density1,density2))
par(ask=TRUE)
title = paste("msr comaparison", windows[i], "  corr:", round(cor.test(msr1, msr2)$estimate,2))
plot(msr1, msr2, main = title, xlab = names[1], ylab = names[2])
print(cor.test(msr1, msr2))
}
par(ask=FALSE)
}
macroscopic_correlation(total_exp$`H1_inverted:_FALSE`, total_exp$`stomach_inverted:_FALSE`, names)
macroscopic_correlation(total_exp$`H1_inverted:_FALSE`, total_exp$`stomach_inverted:_FALSE`, names=c("H1", "stomach"))
gc()
load(file = "../../Rexperiments/total_exp_discrete.Rdata")
density_MSR_correlation(total_exp_discrete$`H1_inverted:_FALSE`, "H1", fix = T)
density_MSR_correlation(total_exp_discrete$`H1_inverted:_TRUE`, "H1, inverted")
density_MSR_correlation(total_exp_discrete$`stomach_inverted:_FALSE`, "stomach")
dH1_inverted_FALSE_sig <- get_sig_measures(total_exp_discrete$`H1_inverted:_FALSE`)
dH1_inverted_TRUE_sig <- get_sig_measures(total_exp_discrete$`H1_inverted:_TRUE`)
dstomach_inverted_FALSE_sig <- get_sig_measures(total_exp_discrete$`stomach_inverted:_FALSE`)
dstomach_inverted_TRUE_sig <- get_sig_measures(total_exp_discrete$`stomach_inverted:_TRUE`)
dH1_inverted_FALSE_res <- get_residual_measures(total_exp_discrete$`H1_inverted:_FALSE`)
dH1_inverted_TRUE_res <- get_residual_measures(total_exp_discrete$`H1_inverted:_TRUE`)
dstomach_inverted_FALSE_res <- get_residual_measures(total_exp_discrete$`stomach_inverted:_FALSE`)
dstomach_inverted_TRUE_res <- get_residual_measures(total_exp_discrete$`stomach_inverted:_TRUE`)
H1_fragments_table_discrete = lapply(1:4, function(i)
{
get_experiment_table(total_exp_discrete$`H1_inverted:_FALSE`, total_exp_discrete$`H1_inverted:_TRUE`, dH1_inverted_FALSE_sig, dH1_inverted_TRUE_sig, dH1_inverted_FALSE_res, dH1_inverted_TRUE_res, i)
})
stomach_fragments_table_discrete = lapply(1:4, function(i)
{
get_experiment_table(total_exp_discrete$`stomach_inverted:_FALSE`, total_exp_discrete$`stomach_inverted:_TRUE`, dstomach_inverted_FALSE_sig, dstomach_inverted_TRUE_sig, dstomach_inverted_FALSE_res, dstomach_inverted_TRUE_res, i)
})
save(H1_fragments_table_discrete, file = "../../Rexperiments/H1_fragments_table_discrete.Rdata")
save(stomach_fragments_table_discrete, file = "../../Rexperiments/stomach_fragments_table_discrete.Rdata")
H1_fragments_table_discrete
H1_fragments_table_discrete[[1]]
lista_speciale = filter_by_significance(H1_fragments_table_discrete, alpha = 0)
lista_speciale = filter_by_significance(H1_fragments_table_discrete[[1]], alpha = 0)
lista_speciale
show_fragment_info(lista_speciale$start[k]+1e3, 1e3, data_H1, discretize = T); j=0; k=k+1
show_fragment_info(lista_speciale$start[k]+1e3, 1e3, data_H1, discretize = T); k=0; k=k+1
show_fragment_info(lista_speciale$start[k]+1e3, 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k]+1e3, 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k]+1e3, 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k]+1e3, 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k]+1e3, 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k]+1e3, 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k]+1e3, 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k]+1e3, 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k]+1e3, 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k]+1e3, 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k]+1e3, 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k]+1e3, 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k]+1e3, 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k]+1e3, 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k]+1e3, 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k]+1e3, 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k]+1e3, 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k]+1e3, 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k]+1e3, 1e3, data_H1, discretize = T); k=k+1
lista_speciale
show_fragment_info(246001+1e3, 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(246001, 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
show_fragment_info(lista_speciale$start[k], 1e3, data_H1, discretize = T); k=k+1
