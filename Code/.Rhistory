sample_fragment_plots <- function(n, data, table, discretize = F, min_reads = 3, range = 1e3,)
{
s = sample(x = 1:length(table$start), size = n, replace = F)
for(i in s)
show_fragment_info2(i, range, data, table, F, 3)
}
sample_fragment_plots(9, data_H1, d[high_sig_high, ])
sample_fragment_plots <- function(n, data, table, discretize = F, min_reads = 3, range = 1e3)
{
s = sample(x = 1:length(table$start), size = n, replace = F)
for(i in s)
show_fragment_info2(i, range, data, table, F, 3)
}
sample_fragment_plots(9, data_H1, d[high_sig_high, ])
show_fragment_info2 <- function(i, range, data, table, discretize = F, min_reads = 1)
{
density = round(table[i, "density"],2)
msr = round(table[i, "msr"],2)
sig = round(table[i, "sig"],6)
inverted_msr = round(table[i, "inverted_msr"],2)
inverted_sig = round(table[i, "inverted_sig"],6)
main = sprintf("density: %s\n msr: %s, msr_cdf: %s \n inv_msr: %s, inv_msr_cdf: %s", density, msr, sig, inverted_msr, inverted_sig)
i = table[i, "start"]
info = data[c(i,i+range), c("chr", "Cpos")]
n_of_bases = data$Cpos[i+range]-data$Cpos[i]
d = data[i:(i+range)]
series = d[reads>=min_reads,prop]
if(discretize)
series = round(series/100)
print(info)
cat("n of bases: ", n_of_bases)
plot(series, ylab="prop", main = main)
}
sample_fragment_plots(9, data_H1, d[high_sig_high, ])
gc()
View(Annotations_dataframe)
which(c(T,F,F,F))
which(c(F,F,T,F))
add_wgbs_indexes <- function(Annotations_dataframe, wgbs_data)
{
data_scheme <- wgbs_data[, c("chr","Cpos")]
l = length(Annotations_dataframe$start)
ranges = mcmapply(1:l, mc.preschedule = T, mc.cores = cores, FUN =  function(n)
{
cat(n," ")
chr_mask = data_scheme$chr==Annotations_dataframe$chr[n]
i_start = which(chr_mask & data_scheme$start==Annotations_dataframe$start[n])
i_end = which(chr_mask & data_scheme$end==Annotations_dataframe$end[n])
c(i_start, i_end)
})
}
add_wgbs_indexes <- function(Annotations_dataframe, wgbs_data)
{
data_scheme <- wgbs_data[, c("chr","Cpos")]
l = length(Annotations_dataframe$start)
l = 10
ranges = mcmapply(1:l, mc.preschedule = T, mc.cores = cores, FUN =  function(n)
{
cat(n," ")
chr_mask = data_scheme$chr==Annotations_dataframe$chr[n]
i_start = which(chr_mask & data_scheme$start==Annotations_dataframe$start[n])
i_end = which(chr_mask & data_scheme$end==Annotations_dataframe$end[n])
c(i_start, i_end)
})
}
add_wgbs_indexes(Annotations_dataframe, data_H1)
add_wgbs_indexes <- function(Annotations_dataframe, wgbs_data, cores = 1)
{
data_scheme <- wgbs_data[, c("chr","Cpos")]
l = length(Annotations_dataframe$start)
l = 10
ranges = mcmapply(1:l, mc.preschedule = T, mc.cores = cores, FUN =  function(n)
{
cat(n," ")
chr_mask = data_scheme$chr==Annotations_dataframe$chr[n]
i_start = which(chr_mask & data_scheme$start==Annotations_dataframe$start[n])
i_end = which(chr_mask & data_scheme$end==Annotations_dataframe$end[n])
c(i_start, i_end)
})
}
add_wgbs_indexes(Annotations_dataframe, data_H1)
x = as.character(data_H1$chr)
add_wgbs_indexes <- function(Annotations_dataframe, wgbs_data, cores = 1)
{
data_scheme <- wgbs_data[, c("chr","Cpos")]
l = length(Annotations_dataframe$start)
l = 10
wgbs_chr = as.character(data_scheme$chr)
anno_chr = as.character(Annotations_dataframe$chr)
ranges = mcmapply(1:l, mc.preschedule = T, mc.cores = cores, FUN =  function(n)
{
cat(n," ")
chr_mask = wgbs_chr==(anno_chr[n])
i_start = which(chr_mask & data_scheme$start==Annotations_dataframe$start[n])
i_end = which(chr_mask & data_scheme$end==Annotations_dataframe$end[n])
c(i_start, i_end)
})
}
add_wgbs_indexes(Annotations_dataframe, data_H1)
add_wgbs_indexes <- function(Annotations_dataframe, wgbs_data, cores = 1)
{
data_scheme <- wgbs_data[, c("chr","Cpos")]
l = length(Annotations_dataframe$start)
l = 10
wgbs_chr = as.character(data_scheme$chr)
anno_chr = as.character(Annotations_dataframe$chr)
ranges = mcmapply(1:l, mc.preschedule = T, mc.cores = cores, FUN =  function(n)
{
cat(n," ")
chr_mask = wgbs_chr==(anno_chr[n])
i_start = which(chr_mask & data_scheme$start==Annotations_dataframe$start[n])
i_end = which(chr_mask & data_scheme$end==Annotations_dataframe$end[n])
c(i_start, i_end)
})
r = data.frame(t(ranges))
colnames(r) <- c("i_start", "i_end")
r = cbind(Annotations_dataframe, r)
gc()
return(r)
}
add_wgbs_indexes(Annotations_dataframe, data_H1)
add_wgbs_indexes <- function(Annotations_dataframe, wgbs_data, cores = 1)
{
data_scheme <- sum_strands(wgbs_data)[, c("chr","Cpos")]
l = length(Annotations_dataframe$start)
l = 10
wgbs_chr = as.character(data_scheme$chr)
anno_chr = as.character(Annotations_dataframe$chr)
ranges = mcmapply(1:l, mc.preschedule = T, mc.cores = cores, FUN =  function(n)
{
cat(n," ")
chr_mask = wgbs_chr==(anno_chr[n])
i_start = which(chr_mask & data_scheme$start==Annotations_dataframe$start[n])
i_end = which(chr_mask & data_scheme$end==Annotations_dataframe$end[n])
c(i_start, i_end)
})
r = data.frame(t(ranges))
colnames(r) <- c("i_start", "i_end")
r = cbind(Annotations_dataframe, r)
gc()
return(r)
}
a = add_wgbs_indexes(Annotations_dataframe, data_H1)
add_wgbs_indexes <- function(Annotations_dataframe, wgbs_data, cores = 1)
{
#wgbs_data = sum_strands(wgbs_data)
data_scheme <- (wgbs_data)[, c("chr","Cpos")]
l = length(Annotations_dataframe$start)
l = 10
wgbs_chr = as.character(data_scheme$chr)
anno_chr = as.character(Annotations_dataframe$chr)
ranges = mcmapply(1:l, mc.preschedule = T, mc.cores = cores, FUN =  function(n)
{
cat(n," ")
chr_mask = wgbs_chr==(anno_chr[n])
i_start = which(chr_mask & data_scheme$start==Annotations_dataframe$start[n])
i_end = which(chr_mask & data_scheme$end==Annotations_dataframe$end[n])
c(i_start, i_end)
})
r = data.frame(t(ranges))
colnames(r) <- c("i_start", "i_end")
r = cbind(Annotations_dataframe, r)
gc()
return(r)
}
a = add_wgbs_indexes(Annotations_dataframe, data_H1)
a
a$chr
a$i_start
add_wgbs_indexes <- function(Annotations_dataframe, wgbs_data, cores = 1)
{
#wgbs_data = sum_strands(wgbs_data)
data_scheme <- (wgbs_data)[, c("chr","Cpos")]
l = length(Annotations_dataframe$start)
l = 10
wgbs_chr = as.character(data_scheme$chr)
anno_chr = as.character(Annotations_dataframe$chr)
ranges = mcmapply(1:l, mc.preschedule = T, mc.cores = cores, FUN =  function(n)
{
cat(n," ")
chr_mask = wgbs_chr==(anno_chr[n])
i_start = which(chr_mask & data_scheme$start==Annotations_dataframe$start[n])
i_end = which(chr_mask & data_scheme$end==Annotations_dataframe$end[n])
c(i_start, i_end)
})
r = cbind(Annotations_dataframe, i_start = ranges[1,])
r = cbind(r, i_end = ranges[2,])
gc()
return(r)
}
a$i_start
a = add_wgbs_indexes(Annotations_dataframe, data_H1)
add_wgbs_indexes <- function(Annotations_dataframe, wgbs_data, cores = 1)
{
#wgbs_data = sum_strands(wgbs_data)
data_scheme <- (wgbs_data)[, c("chr","Cpos")]
l = length(Annotations_dataframe$start)
l = 10
wgbs_chr = as.character(data_scheme$chr)
anno_chr = as.character(Annotations_dataframe$chr)
ranges = mcmapply(1:l, mc.preschedule = T, mc.cores = cores, FUN =  function(n)
{
cat(n," ")
chr_mask = wgbs_chr==(anno_chr[n])
i_start = which(chr_mask & data_scheme$start==Annotations_dataframe$start[n])
i_end = which(chr_mask & data_scheme$end==Annotations_dataframe$end[n])
c(i_start, i_end)
})
print(ranges)
r = cbind(Annotations_dataframe, i_start = ranges[,1])
r = cbind(r, i_end = ranges[,2])
gc()
return(r)
}
a = add_wgbs_indexes(Annotations_dataframe, data_H1)
add_wgbs_indexes <- function(Annotations_dataframe, wgbs_data, cores = 1)
{
#wgbs_data = sum_strands(wgbs_data)
data_scheme <- (wgbs_data)[, c("chr","Cpos")]
l = length(Annotations_dataframe$start)
l = 10
wgbs_chr = as.character(data_scheme$chr)
anno_chr = as.character(Annotations_dataframe$chr)
ranges = mcmapply(1:l, mc.preschedule = T, mc.cores = cores, FUN =  function(n)
{
cat(n," ")
chr_mask = wgbs_chr==(anno_chr[n])
i_start = which(chr_mask & data_scheme$start==Annotations_dataframe$start[n])
i_end = which(chr_mask & data_scheme$end==Annotations_dataframe$end[n])
c(i_start, i_end)
})
r = data.frame(t(ranges))
colnames(r) <- c("i_start", "i_end")
out = cbind(Annotations_dataframe, i_start = r$i_start)
out = cbind(out, i_end = r$i_end)
gc()
return(r)
}
a = add_wgbs_indexes(Annotations_dataframe, data_H1)
apply(array, margin, ...)
a
add_wgbs_indexes <- function(Annotations_dataframe, wgbs_data, cores = 1)
{
#wgbs_data = sum_strands(wgbs_data)
data_scheme <- (wgbs_data)[, c("chr","Cpos")]
l = length(Annotations_dataframe$start)
l = 10
wgbs_chr = as.character(data_scheme$chr)
anno_chr = as.character(Annotations_dataframe$chr)
ranges = mcmapply(1:l, mc.preschedule = T, mc.cores = cores, FUN =  function(n)
{
cat(n," ")
chr_mask = wgbs_chr==(anno_chr[n])
i_start = which(chr_mask & data_scheme$start==Annotations_dataframe$start[n])
i_end = which(chr_mask & data_scheme$end==Annotations_dataframe$end[n])
c(i_start, i_end)
})
r = data.frame(t(ranges))
colnames(r) <- c("i_start", "i_end")
print(r)
out = cbind(Annotations_dataframe, i_start = r$i_start)
out = cbind(out, i_end = r$i_end)
gc()
return(r)
}
a
a = add_wgbs_indexes(Annotations_dataframe, data_H1)
add_wgbs_indexes <- function(Annotations_dataframe, wgbs_data, cores = 1)
{
#wgbs_data = sum_strands(wgbs_data)
data_scheme <- (wgbs_data)[, c("chr","Cpos")]
l = length(Annotations_dataframe$start)
l = 10
wgbs_chr = as.character(data_scheme$chr)
anno_chr = as.character(Annotations_dataframe$chr)
ranges = mcmapply(1:l, mc.preschedule = T, mc.cores = cores, FUN =  function(n)
{
cat(n," ")
chr_mask = wgbs_chr==(anno_chr[n])
i_start = which(chr_mask & data_scheme$start==Annotations_dataframe$start[n])
i_end = which(chr_mask & data_scheme$end==Annotations_dataframe$end[n])
c(i_start, i_end)
print(c(i_start, i_end))
})
r = data.frame(t(ranges))
colnames(r) <- c("i_start", "i_end")
print(r)
out = cbind(Annotations_dataframe, i_start = r$i_start)
out = cbind(out, i_end = r$i_end)
gc()
return(r)
}
a = add_wgbs_indexes(Annotations_dataframe, data_H1)
add_wgbs_indexes <- function(Annotations_dataframe, wgbs_data, cores = 1)
{
#wgbs_data = sum_strands(wgbs_data)
data_scheme <- (wgbs_data)[, c("chr","Cpos")]
l = length(Annotations_dataframe$start)
l = 10
wgbs_chr = as.character(data_scheme$chr)
anno_chr = as.character(Annotations_dataframe$chr)
ranges = mcmapply(1:l, mc.preschedule = T, mc.cores = cores, FUN =  function(n)
{
cat(n," ")
chr_mask = wgbs_chr==(anno_chr[n])
i_start = which(chr_mask & data_scheme$Cpos==Annotations_dataframe$start[n])
i_end = which(chr_mask & data_scheme$Cpos==Annotations_dataframe$end[n])
c(i_start, i_end)
print(c(i_start, i_end))
})
r = data.frame(t(ranges))
colnames(r) <- c("i_start", "i_end")
print(r)
out = cbind(Annotations_dataframe, i_start = r$i_start)
out = cbind(out, i_end = r$i_end)
gc()
return(r)
}
a = add_wgbs_indexes(Annotations_dataframe, data_H1)
data
data_H1
data_H1[, c("chr","Cpos")]
chrX
x
x = "chr1"
x = as.character(data_H1$chr)
x == "chr1"
sum(x == "chr1")
Enhancers
data_H1$Cpos==87449400
any(data_H1$Cpos==87449400)
any(data_H1$Cpos==87449401)
any(data_H1$Cpos==87449400-1)
Enhancers
data_H1$Cpos>=87449400  & data_H1$Cpos<=87449601 & data_H1$chr=="chr1"
data_H1[data_H1$Cpos>=87449400  & data_H1$Cpos<=87449601 & data_H1$chr=="chr1"]
add_wgbs_indexes <- function(Annotations_dataframe, wgbs_data, cores = 1)
{
#wgbs_data = sum_strands(wgbs_data)
data_scheme <- (wgbs_data)[, c("chr","Cpos")]
l = length(Annotations_dataframe$start)
l = 10
wgbs_chr = as.character(data_scheme$chr)
anno_chr = as.character(Annotations_dataframe$chr)
ranges = mcmapply(1:l, mc.preschedule = T, mc.cores = cores, FUN =  function(n)
{
cat(n," ")
chr_mask = (wgbs_chr==(anno_chr[n]))
indexes = which(chr_mask & data_scheme$Cpos>=Annotations_dataframe$start[n]  & data_scheme$Cpos<=Annotations_dataframe$end[n])
i_start = min(indexes)
i_end = max(indexes )
print(c(i_start, i_end))
})
r = data.frame(t(ranges))
colnames(r) <- c("i_start", "i_end")
print(r)
out = cbind(Annotations_dataframe, i_start = r$i_start)
out = cbind(out, i_end = r$i_end)
gc()
return(r)
}
a = add_wgbs_indexes(Annotations_dataframe, data_H1)
a$i_start
add_wgbs_indexes <- function(Annotations_dataframe, wgbs_data, cores = 1)
{
#wgbs_data = sum_strands(wgbs_data)
data_scheme <- (wgbs_data)[, c("chr","Cpos")]
l = length(Annotations_dataframe$start)
l = 10
wgbs_chr = as.character(data_scheme$chr)
anno_chr = as.character(Annotations_dataframe$chr)
ranges = mcmapply(1:l, mc.preschedule = T, mc.cores = cores, FUN =  function(n)
{
cat(n," ")
chr_mask = (wgbs_chr==(anno_chr[n]))
indexes = which(chr_mask & data_scheme$Cpos>=Annotations_dataframe$start[n]  & data_scheme$Cpos<=Annotations_dataframe$end[n])
i_start = min(indexes)
i_end = max(indexes )
})
r = data.frame(t(ranges))
colnames(r) <- c("i_start", "i_end")
print(r)
out = cbind(Annotations_dataframe, i_start = r$i_start)
out = cbind(out, i_end = r$i_end)
gc()
return(out)
}
a = add_wgbs_indexes(Annotations_dataframe, data_H1)
a
add_wgbs_indexes <- function(Annotations_dataframe, wgbs_data, cores = 1)
{
#wgbs_data = sum_strands(wgbs_data)
data_scheme <- (wgbs_data)[, c("chr","Cpos")]
l = length(Annotations_dataframe$start)
l = 10
wgbs_chr = as.character(data_scheme$chr)
anno_chr = as.character(Annotations_dataframe$chr)
ranges = mcmapply(1:l, mc.preschedule = T, mc.cores = cores, FUN =  function(n)
{
cat(n," ")
chr_mask = (wgbs_chr==(anno_chr[n]))
indexes = which(chr_mask & data_scheme$Cpos>=Annotations_dataframe$start[n]  & data_scheme$Cpos<=Annotations_dataframe$end[n])
i_start = min(indexes)
i_end = max(indexes )
})
r = data.frame(t(ranges))
colnames(r) <- c("i_start", "i_end")
print(r)
out = cbind(Annotations_dataframe, i_start = r$i_start, i_end = r$i_end)
gc()
return(out)
}
a = add_wgbs_indexes(Annotations_dataframe, data_H1)
a$chr
a
add_wgbs_indexes <- function(Annotations_dataframe, wgbs_data, cores = 1)
{
#wgbs_data = sum_strands(wgbs_data)
data_scheme <- (wgbs_data)[, c("chr","Cpos")]
l = length(Annotations_dataframe$start)
l = 4
wgbs_chr = as.character(data_scheme$chr)
anno_chr = as.character(Annotations_dataframe$chr)
ranges = mcmapply(1:l, mc.preschedule = T, mc.cores = cores, FUN =  function(n)
{
cat(n," ")
chr_mask = (wgbs_chr==(anno_chr[n]))
indexes = which(chr_mask & data_scheme$Cpos>=Annotations_dataframe$start[n]  & data_scheme$Cpos<=Annotations_dataframe$end[n])
i_start = min(indexes)
i_end = max(indexes )
})
print(ranges)
r = data.frame(t(ranges))
colnames(r) <- c("i_start", "i_end")
print(r)
out = cbind(Annotations_dataframe, i_start = r$i_start, i_end = r$i_end)
gc()
return(out)
}
a = add_wgbs_indexes(Annotations_dataframe, data_H1)
add_wgbs_indexes <- function(Annotations_dataframe, wgbs_data, cores = 1)
{
#wgbs_data = sum_strands(wgbs_data)
data_scheme <- (wgbs_data)[, c("chr","Cpos")]
l = length(Annotations_dataframe$start)
l = 4
wgbs_chr = as.character(data_scheme$chr)
anno_chr = as.character(Annotations_dataframe$chr)
ranges = mcmapply(1:l, mc.preschedule = T, mc.cores = cores, FUN =  function(n)
{
cat(n," ")
chr_mask = (wgbs_chr==(anno_chr[n]))
indexes = which(chr_mask & data_scheme$Cpos>=Annotations_dataframe$start[n]  & data_scheme$Cpos<=Annotations_dataframe$end[n])
i_start = min(indexes)
i_end = max(indexes )
return(c(i_start, i_end))
})
print(ranges)
r = data.frame(t(ranges))
colnames(r) <- c("i_start", "i_end")
print(r)
out = cbind(Annotations_dataframe, i_start = r$i_start, i_end = r$i_end)
gc()
return(out)
}
a = add_wgbs_indexes(Annotations_dataframe, data_H1)
a
add_wgbs_indexes <- function(Annotations_dataframe, wgbs_data, cores = 1)
{
#wgbs_data = sum_strands(wgbs_data)
data_scheme <- (wgbs_data)[, c("chr","Cpos")]
l = length(Annotations_dataframe$start)
wgbs_chr = as.character(data_scheme$chr)
anno_chr = as.character(Annotations_dataframe$chr)
ranges = mcmapply(1:l, mc.preschedule = T, mc.cores = cores, FUN =  function(n)
{
cat(n," ")
chr_mask = (wgbs_chr==(anno_chr[n]))
indexes = which(chr_mask & data_scheme$Cpos>=Annotations_dataframe$start[n]  & data_scheme$Cpos<=Annotations_dataframe$end[n])
i_start = min(indexes)
i_end = max(indexes )
return(c(i_start, i_end))
})
print(ranges)
r = data.frame(t(ranges))
colnames(r) <- c("i_start", "i_end")
print(r)
out = cbind(Annotations_dataframe, i_start = r$i_start, i_end = r$i_end)
gc()
return(out)
}
a = add_wgbs_indexes(Annotations_dataframe[1:10, ], data_H1)
a
data_H1[a$i_start]
Enhancers
# Histograms
compare_meth_annotation_histograms(names, reads_name = "valid sites", title = "CG islands methylation", min_reads = 10, H1_islands, stomach_islands, HeLa_islands, K562_islands)
###################################################################
H1_islands      = readRDS("../../Rexperiments/H1_island_data.Rda")
stomach_islands = readRDS("../../Rexperiments/stomach_island_data.Rda")
K562_islands    = readRDS("../../Rexperiments/K562_island_data.Rda")
HeLa_islands    = readRDS("../../Rexperiments/HeLa_S3_island_data.Rda")
#####################################################################
# Correlation
min_reads = 10
annotation_level_meth_correlation(H1_islands, stomach_islands, reads_name = "valid sites", min_reads)
annotation_level_meth_correlation(H1_islands, stomach_islands, reads_name = "valid sites", min_reads)
annotation_level_meth_correlation(H1_islands, K562_islands,    reads_name = "valid sites", min_reads)
annotation_level_meth_correlation(H1_islands, K562_islands,    reads_name = "valid sites", min_reads=100)
annotation_level_meth_correlation(H1_islands, stomach_islands, reads_name = "valid sites", min_reads=100)
annotation_level_meth_correlation(H1_islands, HeLa_islands,    reads_name = "valid sites", min_reads=100)
annotation_level_meth_correlation(H1_islands, K562_islands,    reads_name = "valid sites", min_reads=100)
