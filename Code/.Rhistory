for(p in CpGlists)
{
result = rbind(result,p)
}
return(result)
}
autocor <- function(v, lag)
{
l = length(v)
plot(v[1:(l-lag)],v[(1+lag):l])
cor.test(v[1:(l-lag)],v[(1+lag):l])
}
random_binary_vector <- function(l, prop)
{
M <- round(l*prop)
bin <- array(dim = l, 0)
bin[sample(1:l, M)] <- 1
return((bin))
}
sample_msr <- function(l, prop)
{
v <- random_binary_vector(l, prop)
rr_v <- calculate_relevance_resolution_vector_ignoring_nas(v, verbose = F)
MSR_area(rr_v)
}
msr_samples <- function(l, prop, sample_size, cores = 1, verbose = F)
{
start_time <- Sys.time()
msr_samples = mcmapply(1:sample_size, mc.preschedule = T, mc.cores = cores, FUN =  function(n)
{
#if(verbose) cat(n, " ")
sample_msr(l, prop)
})
if(verbose) cat("time: ", Sys.time()-start_time)
return(msr_samples)
}
msr_significance_experiment <- function(l,prop_list, samples_size, cores = 1, verbose = F)
{
start_time <- Sys.time()
exp = mcmapply(prop_list, mc.preschedule = T, mc.cores = cores, FUN =  function(p)
{
if(verbose) cat(p, " ")
msr_samples(l, p, samples_size, cores = 1, verbose = F)
})
cat("time: ", Sys.time()-start_time)
exp = t(exp)
rownames(exp) <- prop_list
return(List(data=exp, prop_list=prop_list))
}
get_msr_ecdf <- function(l, prop, sample_size, cores = 1)
{
return(ecdf(msr_samples(l, prop, sample_size, verbose = F, cores = cores)))
}
get_msr_ecdfs <- function(l, prop_list, sample_size, cores = 1)
{
sapply(prop_list, function(prop)
{
if(prop==0 || prop==1) e = NA
else e = get_msr_ecdf(l, prop, sample_size, cores = cores)
return(List(cdf = e, prop=prop))
})
}
inverse = function(f, lower = -100, upper = 100) {
function (y) uniroot((function (x) f(x) - y), lower = lower, upper = upper)[1]$root
}
msr_confidence_line <- function(ecdfs, confidence = 0.99)
{
sapply(ecdfs, function(f)
{
if( f$prop==0 || f$prop==1) return(c(f$prop,NA))
c(f$prop, inverse(f$cdf, 0, 0.4)(confidence))
})
}
add_msr_confidence_line <- function(ecdfs, confidence = 0.99, col = 1, lty = 2)
{
conf = msr_confidence_line(ecdfs, confidence)
lines(conf[1,], conf[2,], col=col, lty=lty)
}
general_msr_cdf <- function(ecdfs, density, msr)
{
for( i in 1:length(ecdfs))
{
if(density>= ecdfs[[i]]$prop & density<= ecdfs[[i+1]]$prop)
{
dist1 = density - ecdfs[[i]]$prop
dist2 = ecdfs[[i+1]]$prop - density
w = dist1/(dist1+dist2)
return(ecdfs[[i]]$cdf(msr)*(1-w)+(w)*ecdfs[[i+1]]$cdf(msr))
}
}
}
#setwd("./Scrivania/Tesi/MethylationCode/")
#cell_files <- list.files(directory,pattern="(_converted.Rda)$")
#cell_files <- list.files(directory,pattern="(_converted.Rda)$")
#cell_names <- sub("_converted.Rda","", cell_files)
#cell_files <- list.files(directory,pattern="(_converted.Rda)$")
#cell_names <- sub("_converted.Rda","", cell_files)
#methylation_vector <- as.logical(readRDS("MethylationData/binary_rate/GSM3436261_O1_TA_Hi_10_converted.Rda"))
#cell_files <- list.files(directory,pattern="(_converted.Rda)$")
#cell_names <- sub("_converted.Rda","", cell_files)
#methylation_vector <- as.logical(readRDS("MethylationData/binary_rate/GSM3436261_O1_TA_Hi_10_converted.Rda"))
#cell_files <- list.files(directory,pattern="(_converted.Rda)$")
#cell_names <- sub("_converted.Rda","", cell_files)
#methylation_vector <- as.logical(readRDS("MethylationData/binary_rate/GSM3436261_O1_TA_Hi_10_converted.Rda"))
#cell_files <- list.files(directory,pattern="(_converted.Rda)$")
#cell_names <- sub("_converted.Rda","", cell_files)
#methylation_vector <- as.logical(readRDS("MethylationData/binary_rate/GSM3436261_O1_TA_Hi_10_converted.Rda"))
#cell_files <- list.files(directory,pattern="(_converted.Rda)$")
#cell_names <- sub("_converted.Rda","", cell_files)
#methylation_vector <- as.logical(readRDS("MethylationData/binary_rate/GSM3436261_O1_TA_Hi_10_converted.Rda"))
#cell_files <- list.files(directory,pattern="(_converted.Rda)$")
#cell_names <- sub("_converted.Rda","", cell_files)
#methylation_vector <- as.logical(readRDS("MethylationData/binary_rate/GSM3436261_O1_TA_Hi_10_converted.Rda"))
#cell_files <- list.files(directory,pattern="(_converted.Rda)$")
#cell_names <- sub("_converted.Rda","", cell_files)
#methylation_vector <- as.logical(readRDS("MethylationData/binary_rate/GSM3436261_O1_TA_Hi_10_converted.Rda"))
#cell_files <- list.files(directory,pattern="(_converted.Rda)$")
#cell_names <- sub("_converted.Rda","", cell_files)
#methylation_vector <- as.logical(readRDS("MethylationData/binary_rate/GSM3436261_O1_TA_Hi_10_converted.Rda"))
#cell_files <- list.files(directory,pattern="(_converted.Rda)$")
#cell_names <- sub("_converted.Rda","", cell_files)
#methylation_vector <- as.logical(readRDS("MethylationData/binary_rate/GSM3436261_O1_TA_Hi_10_converted.Rda"))
#cell_files <- list.files(directory,pattern="(_converted.Rda)$")
#cell_names <- sub("_converted.Rda","", cell_files)
#methylation_vector <- as.logical(readRDS("MethylationData/binary_rate/GSM3436261_O1_TA_Hi_10_converted.Rda"))
#cell_files <- list.files(directory,pattern="(_converted.Rda)$")
#cell_names <- sub("_converted.Rda","", cell_files)
#methylation_vector <- as.logical(readRDS("MethylationData/binary_rate/GSM3436261_O1_TA_Hi_10_converted.Rda"))
sample_msr(1e6, 0.5)
msr_samples(1e6, 0.05, 10, verbose = T)
msr_samples(1e5, 0.05, 10, verbose = T)
2*20*1e4
2*20*1e4/18
2*20*1e4/18/3600
2*25*1e4/18/3600
2*25*1e3/18/3600
2*25*4e3/18/3600
2*25*5e3/18/3600
2*25*1e4/18/3600
2*25*1e4/20/3600
knitr::opts_chunk$set(echo = TRUE)
#################################################################################################
setwd(dir = "Scrivania/Tesi/Methylation-project/Code/")
source("WGBS_analysis_functions.R", chdir = T)
file_stomach <- "../../MethylationCode/MethylationData/wgbs/stomach.Rda"
data_stomach <- readRDS(file_stomach)
data_stomach$pico
length(data_stomach$pico)
sum_strands <- function(data, verbose = T)
{
if(length(data$strand)==0)
{
if(verbose)
cat("no strands")
return(data)
}
unstranded_data <- pick_plus_strand(data)
minus_reads <- pick_minus_strand(data)[, reads]
minus_props <- pick_minus_strand(data)[, prop]
plus_reads <- unstranded_data[, reads]
plus_props <- unstranded_data[, prop]
if(verbose)
{
#covered_positions = as.logical((plus_reads!=0) + (minus_reads!=0))
double_strand_reads = as.logical((plus_reads!=0) * (minus_reads!=0))
hemymethylated_sites = as.logical(double_strand_reads * (abs(plus_props-minus_props)>50))
hemymethylation_prop <- sum(hemymethylated_sites)/sum(double_strand_reads)
cat("Double reads proportion: ", sum(double_strand_reads)/length(double_strand_reads))
cat("\nHemimethylation proportion on double reads: ", hemymethylation_prop, "\n")
}
new_reads <- minus_reads + plus_reads
unstranded_data$reads = new_reads
#new_reads[new_reads==0] <- 1 # avoid following division by zero
new_prop <- ((minus_reads*minus_props) + (plus_reads*plus_props))/(new_reads)
unstranded_data$prop = new_prop
gc()
#print(unstranded_data)
#return(unstranded_data[,-"strand"])
return(unstranded_data)
}
data_stomach = sum_strands(data_stomach)
data_stomach = sum_strands(data_stomach)
data_stomach
setwd(dir = "Scrivania/Tesi/Methylation-project/Code/")
source("WGBS_analysis_functions.R", chdir = T)
remove_last_3_chr <- Vectorize(function(s)
{
if(substr(s, 1, 4)=="ENSG")
return(substr(s, 1, nchar(s)-3))
else(return(s))
})
read_rna_file <- function(file, reduced = T, correct_gene_id = T)
{
stomach_rna <- fread(file = file_seq,verbose=F, showProgress=T, stringsAsFactors = T)
if(reduced)
stomach_rna = stomach_rna[,c("gene_id", "TPM")]
if(correct_gene_id)
{
stomach_rna$gene_id = remove_last_3_chr(as.character(stomach_rna$gene_id))
}
return(stomach_rna)
}
get_genes_by_region <- function(start_chr, start_position, end_position, genebody_annotation)
{
genebody_annotation[chr==start_chr & start>=start_position & end<=end_position]$id
}
get_TPM <- function(ids, rna_data)
{
rna_data[gene_id %in% (ids), TPM]
}
make_msr_rna_data_frame <- function(wgbs_data, rna_data, genebody_annotation, msr_experiment_data_frame)
{
wgbs_data = sum_strands(wgbs_data, verbose = F)
i_starting_points = msr_experiment_data_frame$start
window = i_starting_points[2]-i_starting_points[1]
start_positions = wgbs_data[i_starting_points]$Cpos
start_chr = wgbs_data[i_starting_points]$chr
end_positions = wgbs_data[i_starting_points+window]$Cpos
#end_chr = wgbs_data[i_starting_points+window]$chr
l = length(start_positions)
gene_info = sapply(1:l, function(i)
{
cat(i, " ")
genes = get_genes_by_region(start_chr[i], start_positions[i], end_positions[i], genebody_annotation)
tpm = get_TPM(genes, rna_data)
total_TPM = sum(tpm)
c(length(genes), sum(tpm))
})
nucleotides = end_positions-start_positions
nucleotides[nucleotides<=0] = NA
out = cbind(data.frame(start_chr, start_positions, end_positions,
nucleotides, gene_count = gene_info[1,], total_TPM = gene_info[2,]
), msr_experiment_data_frame)
return(out)
}
##########################
file_rna_stomach = "../../MethylationCode/MethylationData/rna-seq/ENCFF918KPC_stomach.tsv"
stomach_rna <- read_rna_file(file_rna_stomach)
read_rna_file <- function(file_rna, reduced = T, correct_gene_id = T)
{
stomach_rna <- fread(file = file_rna,verbose=F, showProgress=T, stringsAsFactors = T)
if(reduced)
stomach_rna = stomach_rna[,c("gene_id", "TPM")]
if(correct_gene_id)
{
stomach_rna$gene_id = remove_last_3_chr(as.character(stomach_rna$gene_id))
}
return(stomach_rna)
}
stomach_rna <- read_rna_file(file_rna_stomach)
stomach_rna
geneody = readRDS("../../Rexperiments/genebody_improved.Rda")
a = make_msr_rna_data_frame(data_stomach, stomach_rna, genebody, stomach_fragments_table[[1]][1:100])
load("../../Rexperiments/stomach_fragments_table.Rdata")
a = make_msr_rna_data_frame(data_stomach, stomach_rna, genebody, stomach_fragments_table[[1]][1:100])
a = make_msr_rna_data_frame(data_stomach, stomach_rna, genebody, stomach_fragments_table[[4]])
remove(geneody)
genebody = readRDS("../../Rexperiments/genebody_improved.Rda")
a = make_msr_rna_data_frame(data_stomach, stomach_rna, genebody, stomach_fragments_table[[4]])
a
a = make_msr_rna_data_frame(data_stomach, stomach_rna, genebody, stomach_fragments_table[[3]])
a
sum(a$gene_count)
sum(a$total_TPM)
start
a
a = make_msr_rna_data_frame(data_stomach, stomach_rna, genebody, stomach_fragments_table[[2]])
a
corrplot()
chart.Correlation()
library("MASS")
chart.Correlation()
library("PerformanceAnalytics")
install.packages("PerformanceAnalytics")
library("PerformanceAnalytics")
chart.Correlation()
chart.Correlation(a)
chart.Correlation(a[, "nucleotides"])
chart.Correlation(a[, "nucleotides", "gene_count"])
chart.Correlation(a[, c("nucleotides", "gene_count")])
chart.Correlation(a[, c("nucleotides", "gene_count", "density", "msr")])
chart.Correlation(a[, c("nucleotides", "gene_count", "density", "msr", "total_TPM")])
chart.Correlation(a[, c("nucleotides", "gene_count", "density", "msr", "total_TPM", "missing_data_experiments.R")])
chart.Correlation(a[, -c("chr", "i_start", "start", "end")])
a[, -c("chr", "i_start", "start", "end")]
a[-c("chr", "i_start", "start", "end")]
a[-c("chr")]
a[-"chr"]
a[, -"chr"]
a
chart.Correlation(a[, -c(1,2,3,7)])
l = lm(gene_count ~ ., data = a)
l
summary(l)
plot(l)
l$residuals
sum(l$residuals)
sum(abs(l$residuals))
mean(abs(l$residuals))
a$gene_count
l = lm(total_TPM ~ ., data = a)
mean(abs(l$residuals))
summary(l)
l = lm(total_TPM ~ ., data = a[, -c(1,2,3,7)])
summary(l)
mean(abs(l$residuals))
std(l$residuals)
l = lm(total_TPM ~ ., data = a[, -c(1,2,3,7,4,5)])
summary(l)
mean(abs(l$residuals))
l = lm(total_TPM ~ ., data = a[, -c(1,2,3,7,4,5,8)])
summary(l)
plot(l)
l = lm(gene_count ~ ., data = a[, -c(1,2,3,7,4,6,8)])
l
l = lm(total_TPM ~ ., data = a[, -c(1,2,3,7,4,5,8)])
l = lm(gene_count ~ ., data = a[, -c(1,2,3,7,4,6,8)])
l = lm(gene_count ~ ., data = a[, -c(1,2,3,7,4,6,8)])
plot(l)
summary(l)
l$fitted.values
l$residuals
a = make_msr_rna_data_frame(data_stomach, stomach_rna, genebody, stomach_fragments_table[[1]])
chart.Correlation(a[, -c(1,2,3,7)])
chart.Correlation(a[, -c(1,2,3,7)])
a[1]
a[1, ]
l = lm(gene_count ~ ., data = a[, -c(1,2,3,7)])
summary(l)
l = lm(total_spatial_experiment() ~ ., data = a[, -c(1,2,3,7)])
l = lm(total_TPM ~ ., data = a[, -c(1,2,3,7)])
summary(l)
a[1:0, ]
a[50, ]
a[51, ]
a[52, ]
genebody[chr=="chr1",]
genebody[chr=="chr1" & start>=2013022 & end<=2042657, ]
stomach_rna[gene_id==ENSG00000187730, ]
stomach_rna[gene_id=="ENSG00000187730", ]
a[56, ]
a[56:100, ]
genebody[chr==a[65,]$start_chr & start>=a[65,]$start_positions & end<=a[65,]$end_positions, ]
stomach_rna[gene_id=="ENSG00000157916", ]
1000/a$nucleotides
hist(1000/a$nucleotides)
mean(1000/a$nucleotides)
mean(1000/a$nucleotides, na.rm = T)
a[1000/a$nucleotides>0.1,]
a[1000/a$nucleotides>0.1 & !is.na(a$nucleotides),]
a[1000/a$nucleotides>0.05 & !is.na(a$nucleotides),]
sum(a$gene_count)
get_genes_by_region <- function(start_chr, start_position, end_position, genebody_annotation)
{
# fully included
#genebody_annotation[chr==start_chr & start>=start_position & end<=end_position]$id
# start included
genebody_annotation[chr==start_chr & start>=start_position & start<=end_position]$id
}
get_TPM <- function(ids, rna_data)
{
rna_data[gene_id %in% (ids), TPM]
}
make_msr_rna_data_frame <- function(wgbs_data, rna_data, genebody_annotation, msr_experiment_data_frame)
{
wgbs_data = sum_strands(wgbs_data, verbose = F)
i_starting_points = msr_experiment_data_frame$start
window = i_starting_points[2]-i_starting_points[1]
start_positions = wgbs_data[i_starting_points]$Cpos
start_chr = wgbs_data[i_starting_points]$chr
end_positions = wgbs_data[i_starting_points+window]$Cpos
#end_chr = wgbs_data[i_starting_points+window]$chr
l = length(start_positions)
gene_info = sapply(1:l, function(i)
{
cat(i, " ")
genes = get_genes_by_region(start_chr[i], start_positions[i], end_positions[i], genebody_annotation)
tpm = get_TPM(genes, rna_data)
total_TPM = sum(tpm)
c(length(genes), sum(tpm))
})
nucleotides = end_positions-start_positions
nucleotides[nucleotides<=0] = NA
out = cbind(data.frame(start_chr, start_positions, end_positions,
nucleotides, gene_count = gene_info[1,], total_TPM = gene_info[2,]
), msr_experiment_data_frame)
return(out)
}
a = make_msr_rna_data_frame(data_stomach, stomach_rna, genebody, stomach_fragments_table[[4]])
a$gene_count
a = make_msr_rna_data_frame(data_stomach, stomach_rna, genebody, stomach_fragments_table[[1]])
a$gene_count
sum(a$gene_count)
genebody
stomach_rna[gene_id %in% genebody$id,]
chart.Correlation(a[, -c(1,2,3,7)])
a
show_fragment_info1 <- function(i, range, data, table, discretize = F, min_reads = 1)
{
info = data[c(i,i+range), c("chr", "Cpos")]
n_of_bases = data$Cpos[i+range]-data$Cpos[i]
d = data[i:(i+range)]
series = d[reads>=min_reads,prop]
if(discretize)
series = round(series/100)
print(info)
cat("n of bases: ", n_of_bases)
row = table[table$start==i, ]
density = round(row[, "density"],2)
msr = round(row[, "msr"],2)
sig = round(row[, "sig"],5)
inverted_msr = round(row[, "inverted_msr"],2)
inverted_sig = round(row[, "inverted_sig"],5)
main = sprintf("density: %s\n msr: %s, msr_cdf: %s \n inv_msr: %s, inv_msr_cdf: %s", density, msr, sig, inverted_msr, inverted_sig)
i = table[i, "start"]
plot(series, ylab="prop", main = main)
}
show_fragment_info2 <- function(i, range, data, table, discretize = F, min_reads = 1)
{
density = round(table[i, "density"],2)
msr = round(table[i, "msr"],2)
sig = round(table[i, "sig"],6)
inverted_msr = round(table[i, "inverted_msr"],2)
inverted_sig = round(table[i, "inverted_sig"],6)
main = sprintf("density: %s\n msr: %s, msr_cdf: %s \n inv_msr: %s, inv_msr_cdf: %s", density, msr, sig, inverted_msr, inverted_sig)
i = table[i, "start"]
info = data[c(i,i+range), c("chr", "Cpos")]
n_of_bases = data$Cpos[i+range]-data$Cpos[i]
d = data[i:(i+range)]
series = d[reads>=min_reads,prop]
if(discretize)
series = round(series/100)
print(info)
cat("n of bases: ", n_of_bases)
plot(series, ylab="prop", main = main)
}
show_fragment_info1(1, 1e3, data_stomach, stomach_fragments_table[[1]] )
show_fragment_info1(15, 1e3, data_stomach, stomach_fragments_table[[1]] )
show_fragment_info1(157, 1e3, data_stomach, stomach_fragments_table[[1]] )
show_fragment_info1(1578, 1e3, data_stomach, stomach_fragments_table[[1]] )
a
show_fragment_info1(27001, 1e3, data_stomach, stomach_fragments_table[[1]] )
show_fragment_info1(47001, 1e3, data_stomach, stomach_fragments_table[[1]] )
a
a[a$gene_count>2]
a[a$gene_count>2, ]
a[a$gene_count>2, "i_start"]
a[a$gene_count>2, ]$start
show_fragment_info1(18853001, 1e3, data_stomach, stomach_fragments_table[[1]] )
show_fragment_info1(19911001, 1e3, data_stomach, stomach_fragments_table[[1]] )
show_fragment_info1(19892001, 1e3, data_stomach, stomach_fragments_table[[1]] )
show_fragment_info1(19943001, 1e3, data_stomach, stomach_fragments_table[[1]] )
a[a$gene_count==, ]$start
a[a$gene_count==0, ]$start
show_fragment_info1(2106001, 1e3, data_stomach, stomach_fragments_table[[1]] )
show_fragment_info1(2149001, 1e3, data_stomach, stomach_fragments_table[[1]] )
show_fragment_info1(2149001, 1e3, data_stomach, stomach_fragments_table[[1]] )
show_fragment_info1( 1344001, 1e3, data_stomach, stomach_fragments_table[[1]] )
show_fragment_info1( 90001, 1e3, data_stomach, stomach_fragments_table[[1]] )
show_fragment_info1( 36915, 1e3, data_stomach, stomach_fragments_table[[1]] )
show_fragment_info1( 27461, 1e3, data_stomach, stomach_fragments_table[[1]] )
show_fragment_info1( 21617, 1e3, data_stomach, stomach_fragments_table[[1]] )
show_fragment_info1( 22381, 1e3, data_stomach, stomach_fragments_table[[1]] )
show_fragment_info1( 17906, 1e3, data_stomach, stomach_fragments_table[[1]] )
show_fragment_info1( 17001, 1e3, data_stomach, stomach_fragments_table[[1]] )
a
l = lm(gene_count ~ ., data = a[, -c(1,2,3,7)])
summary(l)
a
l = lm(total_spatial_experiment() ~ ., data = a[, -c(1,2,3,7)])
l = lm(total_TPM ~ ., data = a[, -c(1,2,3,7)])
summary(l)
a$tpm = a$total_TPM/a$gene_count
l = lm(tpm ~ ., data = a[, -c(1,2,3,7)])
summary(l)
l = lm(tpm ~  msr, data = a[, -c(1,2,3,7)])
summary(l)
chart.Correlation(a[, -c(1,2,3,7)])
jjbm
load("../../Rexperiments/stomach_fragments_table_discrete.Rdata")
b = make_msr_rna_data_frame(data_stomach, stomach_rna, genebody, stomach_fragments_table_discrete[[1]])
chart.Correlation(b[, -c(1,2,3,7)])
l = lm(total_TPM ~ ., data = b[, -c(1,2,3,7)])
summary(l)
l = lm(gene_count ~ ., data = b[, -c(1,2,3,7)])
summary(l)
l$residuals
plot(l)
plot(l)
a$gene_count
max(a$gene_count)
a
stomach_rna
sum(stomach_rna$TPM)
sum(stomach_rna$TPM)+0.6
stomach_rna$TPM[1:100]
stomach_rna$gene_id[1:100]
stomach_rna$gene_id[1:1000]
stomach_rna$gene_id[1:100]
stomach_rna$gene_id[1:200]
stomach_rna$gene_id[1:500]
stomach_rna$gene_id[1:600]
stomach_rna$gene_id[1:800]
stomach_rna$gene_id[1:700]
rna_data[gene_id %in% genebody$id]
stomach_rna[gene_id %in% genebody$id]
d = stomach_rna[gene_id %in% genebody$id]$TPM
sum(d)
genebody
d
stomach_rna[gene_id %in% genebody$id]
gc()
