geom_smooth(method = lm)+
xlim(0.24,0.3)+
xlab("CpG sites MSR")+
ylab(Tex("$\\log_2$(pmeTPM)"))
#ylim(-4,NA)+
#ylab("true")+
#ggtitle(paste("\n",cn, ",  r=",round(cor(df[df$cell_name==cn,]$predicted, df[df$cell_name==cn,response_variable]),2), sep=""))
ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlim(0.24,0.3)+
xlab("CpG sites MSR")+
ylab(Tex("$\\log_2$(pmeTPM)"))
library(latex2exp)
library(mgcv)
library(latex2exp)
library(mgcv)
ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlim(0.24,0.3)+
xlab("CpG sites MSR")+
ylab(Tex("$\\log_2$(pmeTPM)"))
ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlim(0.24,0.3)+
xlab("CpG sites MSR")+
ylab(TeX("$\\log_2$(pmeTPM)"))
ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlim(0.26,0.3)+
xlab("CpG sites MSR")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn),"\nfragments of 10,000 CpGs")
ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlim(0.26,0.3)+
xlab("CpG sites MSR")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn),": fragments of 10,000 CpGs", sep="")
ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlim(0.26,0.3)+
xlab("CpG sites MSR")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn),": fragments of 10,000 CpGs", sep="")
ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlim(0.26,0.3)+
xlab("CpG sites MSR")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn,": fragments of 10,000 CpGs", sep=""))
ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlim(0.26,0.3)+
xlab("CpG sites MSR")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn,": fragments of 10,000 CpGs", "   r = ", round(cor(df$x,df$y),2) ,sep=""))
#ylim(-4,NA)+
ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlim(0.26,0.3)+
xlab("CpG sites MSR")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn,":  fragments of 10,000 CpGs,", "    r = ", round(cor(df$x,df$y),2) ,sep=""))
cn <- "GM12878"
df <- data.frame(x = data_tables[[cn]]$meth_autocorrelation, y= data_tables[[cn]]$log_total_pme_TPM)
ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlim(0.26,0.3)+
xlab("meth autocorrelation")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn,":  fragments of 10,000 CpGs,", "    r = ", round(cor(df$x,df$y),2) ,sep=""))
ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlab("meth autocorrelation")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn,":  fragments of 10,000 CpGs,", "    r = ", round(cor(df$x,df$y),2) ,sep=""))
ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth()+
xlab("meth autocorrelation")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn,":  fragments of 10,000 CpGs,", "    r = ", round(cor(df$x,df$y),2) ,sep=""))
ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
#geom_smooth()+
xlab("meth autocorrelation")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn,":  fragments of 10,000 CpGs,", "    r = ", round(cor(df$x,df$y),2) ,sep=""))
grid.arrange(p1,p1)
cn <- "H1"
df <- data.frame(x = data_tables[[cn]]$CGsites_msr, y= data_tables[[cn]]$log_total_pme_TPM)
p1 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlim(0.26,0.3)+
xlab("CpG sites MSR")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn,":  fragments of 10,000 CpGs,", "    r = ", round(cor(df$x,df$y),2) ,sep=""))
#ylim(-4,NA)+
#ylab("true")+
#ggtitle(paste("\n",cn, ",  r=",round(cor(df[df$cell_name==cn,]$predicted, df[df$cell_name==cn,response_variable]),2), sep=""))
cn <- "GM12878"
df <- data.frame(x = data_tables[[cn]]$meth_autocorrelation, y= data_tables[[cn]]$log_total_pme_TPM)
p2 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
#geom_smooth()+
xlab("meth autocorrelation")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn,":  fragments of 10,000 CpGs,", "    r = ", round(cor(df$x,df$y),2) ,sep=""))
grid.arrange(p1,p2)
library(ggplot2)
#library(ggExtra)
library(gridExtra)
library(grid)
library(latex2exp)
library(mgcv)
grid.arrange(p1,p2)
grid.arrange(p1,p2, ncol=2)
cn <- "H1"
df <- data.frame(x = data_tables[[cn]]$CGsites_msr, y= data_tables[[cn]]$log_total_pme_TPM)
p1 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlim(0.26,0.3)+
xlab("CpG sites MSR")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn,":  fragments of 10,000 CpGs,", "    r = ", round(cor(df$x,df$y),2) ,sep=""))
ylim(-4,15)+
#ylab("true")+
#ggtitle(paste("\n",cn, ",  r=",round(cor(df[df$cell_name==cn,]$predicted, df[df$cell_name==cn,response_variable]),2), sep=""))
cn <- "GM12878"
df <- data.frame(x = data_tables[[cn]]$meth_autocorrelation, y= data_tables[[cn]]$log_total_pme_TPM)
p2 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
#geom_smooth()+
xlab("meth autocorrelation")+
ylab(TeX(""))+
ylim(-4,15)+
ggtitle(paste(cn,":  fragments of 10,000 CpGs,", "    r = ", round(cor(df$x,df$y),2) ,sep=""))
grid.arrange(p1,p2, ncol=2)
cn <- "H1"
df <- data.frame(x = data_tables[[cn]]$CGsites_msr, y= data_tables[[cn]]$log_total_pme_TPM)
p1 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlim(0.26,0.3)+
xlab("CpG sites MSR")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn,":  fragments of 10,000 CpGs,", "    r = ", round(cor(df$x,df$y),2) ,sep=""))
ylim(-4,16)+
#ylab("true")+
#ggtitle(paste("\n",cn, ",  r=",round(cor(df[df$cell_name==cn,]$predicted, df[df$cell_name==cn,response_variable]),2), sep=""))
cn <- "GM12878"
df <- data.frame(x = data_tables[[cn]]$meth_autocorrelation, y= data_tables[[cn]]$log_total_pme_TPM)
p2 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
#geom_smooth()+
xlab("meth autocorrelation")+
ylab(TeX(""))+
ylim(-4,15)+
ggtitle(paste(cn,":  fragments of 10,000 CpGs,", "    r = ", round(cor(df$x,df$y),2) ,sep=""))
grid.arrange(p1,p2, ncol=2)
cn <- "H1"
df <- data.frame(x = data_tables[[cn]]$CGsites_msr, y= data_tables[[cn]]$log_total_pme_TPM)
p1 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlim(0.26,0.3)+
xlab("CpG sites MSR")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn,":  fragments of 10,000 CpGs,", "    r = ", round(cor(df$x,df$y),2) ,sep=""))
ylim(-4,16)+
#ylab("true")+
#ggtitle(paste("\n",cn, ",  r=",round(cor(df[df$cell_name==cn,]$predicted, df[df$cell_name==cn,response_variable]),2), sep=""))
cn <- "GM12878"
df <- data.frame(x = data_tables[[cn]]$meth_autocorrelation, y= data_tables[[cn]]$log_total_pme_TPM)
p2 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
#geom_smooth()+
xlab("meth autocorrelation")+
ylab(TeX(""))+
ylim(-4,16)+
ggtitle(paste(cn,":  fragments of 10,000 CpGs,", "    r = ", round(cor(df$x,df$y),2) ,sep=""))
grid.arrange(p1,p2, ncol=2)
cn <- "H1"
df <- data.frame(x = data_tables[[cn]]$CGsites_msr, y= data_tables[[cn]]$log_total_pme_TPM)
p1 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlim(0.26,0.3)+
xlab("CpG sites MSR")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn,":  fragments of 10,000 CpGs,", "    r = ", round(cor(df$x,df$y),2) ,sep=""))
ylim(-4,16)+
#ylab("true")+
#ggtitle(paste("\n",cn, ",  r=",round(cor(df[df$cell_name==cn,]$predicted, df[df$cell_name==cn,response_variable]),2), sep=""))
cn <- "GM12878"
df <- data.frame(x = data_tables[[cn]]$meth_autocorrelation, y= data_tables[[cn]]$log_total_pme_TPM)
p2 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
#geom_smooth()+
xlab("meth autocorrelation")+
ylab(TeX(""))+
ylim(-4,16)+
ggtitle(paste(cn,":  fragments of 10,000 CpGs,", "    r = ", round(cor(df$x,df$y),2) ,sep=""))
grid.arrange(p1,p2, ncol=2)
ylim(-4,16)+
#ylab("true")+
#ggtitle(paste("\n",cn, ",  r=",round(cor(df[df$cell_name==cn,]$predicted, df[df$cell_name==cn,response_variable]),2), sep=""))
cn <- "GM12878"
df <- data.frame(x = data_tables[[cn]]$meth_autocorrelation, y= data_tables[[cn]]$log_total_pme_TPM)
p2 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
#geom_smooth()+
xlab("meth autocorrelation")+
ylab(TeX(""))+
ylim(-4,16)+
ggtitle(paste(cn,":  fragments of 10,000 CpGs,", "    r = ", round(cor(df$x,df$y),2) ,sep=""))
grid.arrange(p1,p2, ncol=2)
ylim(-4,16)+
#ylab("true")+
#ggtitle(paste("\n",cn, ",  r=",round(cor(df[df$cell_name==cn,]$predicted, df[df$cell_name==cn,response_variable]),2), sep=""))
cn <- "GM12878"
ylim(-4,16)+
#ylab("true")+
#ggtitle(paste("\n",cn, ",  r=",round(cor(df[df$cell_name==cn,]$predicted, df[df$cell_name==cn,response_variable]),2), sep=""))
cn <- "GM12878"
# predicted - true scatter
cn <- "H1"
df <- data.frame(x = data_tables[[cn]]$CGsites_msr, y= data_tables[[cn]]$log_total_pme_TPM)
p1 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlim(0.26,0.3)+
xlab("CpG sites MSR")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn,":  fragments of 10,000 CpGs,", "    r = ", round(cor(df$x,df$y),2) ,sep=""))
cn <- "H1"
df <- data.frame(x = data_tables[[cn]]$CGsites_msr, y= data_tables[[cn]]$log_total_pme_TPM)
p1 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlim(0.26,0.3)+
xlab("CpG sites MSR")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn,":  fragments of 10,000 CpGs,", "    r = ", round(cor(df$x,df$y),2) ,sep=""))
ylim(-4,16)
#ylab("true")+
#ggtitle(paste("\n",cn, ",  r=",round(cor(df[df$cell_name==cn,]$predicted, df[df$cell_name==cn,response_variable]),2), sep=""))
cn <- "GM12878"
df <- data.frame(x = data_tables[[cn]]$meth_autocorrelation, y= data_tables[[cn]]$log_total_pme_TPM)
p2 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
#geom_smooth()+
xlab("meth autocorrelation")+
ylab(TeX(""))+
ylim(-4,16)+
ggtitle(paste(cn,":  fragments of 10,000 CpGs,", "    r = ", round(cor(df$x,df$y),2) ,sep=""))
grid.arrange(p1,p2, ncol=2)
# predicted - true scatter
cn <- "H1"
df <- data.frame(x = data_tables[[cn]]$CGsites_msr, y= data_tables[[cn]]$log_total_pme_TPM)
p1 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlim(0.26,0.3)+
xlab("CpG sites MSR")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn,":  fragments of 10,000 CpGs,", "    \nr = ", round(cor(df$x,df$y),2) ,sep=""))
ylim(-4,16)
#ylab("true")+
#ggtitle(paste("\n",cn, ",  r=",round(cor(df[df$cell_name==cn,]$predicted, df[df$cell_name==cn,response_variable]),2), sep=""))
cn <- "GM12878"
df <- data.frame(x = data_tables[[cn]]$meth_autocorrelation, y= data_tables[[cn]]$log_total_pme_TPM)
p2 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
#geom_smooth()+
xlab("meth autocorrelation")+
ylab(TeX(""))+
ylim(-4,16)+
ggtitle(paste(cn,":  fragments of 10,000 CpGs,", "    \nr = ", round(cor(df$x,df$y),2) ,sep=""))
grid.arrange(p1,p2, ncol=2)
df <- data.frame(x = data_tables[[cn]]$CGsites_msr, y= data_tables[[cn]]$log_total_pme_TPM)
p1 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlim(0.26,0.3)+
xlab("CpG sites MSR")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn,":  \nfragments of 10,000 CpGs,", "    \nr = ", round(cor(df$x,df$y),2) ,sep=""))
ylim(-4,16)
#ylab("true")+
#ggtitle(paste("\n",cn, ",  r=",round(cor(df[df$cell_name==cn,]$predicted, df[df$cell_name==cn,response_variable]),2), sep=""))
cn <- "GM12878"
df <- data.frame(x = data_tables[[cn]]$meth_autocorrelation, y= data_tables[[cn]]$log_total_pme_TPM)
p2 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
#geom_smooth()+
xlab("meth autocorrelation")+
ylab(TeX(""))+
ylim(-4,16)+
ggtitle(paste(cn,":  \nfragments of 10,000 CpGs,", "    \nr = ", round(cor(df$x,df$y),2) ,sep=""))
grid.arrange(p1,p2, ncol=2)
cn <- "H1"
df <- data.frame(x = data_tables[[cn]]$CGsites_msr, y= data_tables[[cn]]$log_total_pme_TPM)
p1 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlim(0.26,0.3)+
xlab("CpG sites MSR")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn,":  \nfragments of 10,000 CpGs,", "    \nr = ", round(cor(df$x,df$y),2) ,sep=""))
ylim(-4,16)
#ylab("true")+
#ggtitle(paste("\n",cn, ",  r=",round(cor(df[df$cell_name==cn,]$predicted, df[df$cell_name==cn,response_variable]),2), sep=""))
cn <- "GM12878"
df <- data.frame(x = data_tables[[cn]]$meth_autocorrelation, y= data_tables[[cn]]$log_total_pme_TPM)
p2 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
#geom_smooth()+
xlab("meth autocorrelation")+
ylab(TeX(""))+
ylim(-4,16)+
ggtitle(paste(cn,":  \nfragments of 10,000 CpGs,", "    \nr = ", round(cor(df$x,df$y),2) ,sep=""))
grid.arrange(p1,p2, ncol=2)
cn <- "H1"
under = 500
df <- data.frame(x = data_tables[[cn]]$CGsites_msr, y= data_tables[[cn]]$log_total_pme_TPM)
df <- undersample_data_frame(df,under)
p1 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlim(0.26,0.3)+
xlab("CpG sites MSR")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn,":  \nfragments of 10,000 CpGs", "    \nr = ", round(cor(df$x,df$y),2) ,sep=""))
ylim(-4,16)
#ylab("true")+
#ggtitle(paste("\n",cn, ",  r=",round(cor(df[df$cell_name==cn,]$predicted, df[df$cell_name==cn,response_variable]),2), sep=""))
cn <- "GM12878"
df <- data.frame(x = data_tables[[cn]]$meth_autocorrelation, y= data_tables[[cn]]$log_total_pme_TPM)
df <- undersample_data_frame(df,under)
p2 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
#geom_smooth()+
xlab("meth autocorrelation")+
ylab(TeX(""))+
ylim(-4,16)+
ggtitle(paste(cn,":  \nfragments of 10,000 CpGs", "    \nr = ", round(cor(df$x,df$y),2) ,sep=""))
grid.arrange(p1,p2, ncol=2)
cn <- "H1"
under = 500
df <- data.frame(x = data_tables[[cn]]$CGsites_msr, y= data_tables[[cn]]$log_total_pme_TPM)
df <- undersample_data_frame(df,under)
p1 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlim(0.26,0.3)+
xlab("CpG sites MSR")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn,":  \nfragments of 10,000 CpGs", "    \nr = ", round(cor(df$x,df$y),2) ,sep=""))
ylim(-4,16)
#ylab("true")+
#ggtitle(paste("\n",cn, ",  r=",round(cor(df[df$cell_name==cn,]$predicted, df[df$cell_name==cn,response_variable]),2), sep=""))
cn <- "GM12878"
df <- data.frame(x = data_tables[[cn]]$meth_autocorrelation, y= data_tables[[cn]]$log_total_pme_TPM)
df <- undersample_data_frame(df,under)
p2 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
#geom_smooth()+
xlab("meth autocorrelation")+
ylab(TeX(""))+
ylim(-4,16)+
ggtitle(paste(cn,":  \nfragments of 10,000 CpGs", "    \nr = ", round(cor(df$x,df$y),2) ,sep=""))
grid.arrange(p1,p2, ncol=2)
cn <- "H1"
under = 1000
df <- data.frame(x = data_tables[[cn]]$CGsites_msr, y= data_tables[[cn]]$log_total_pme_TPM)
df <- undersample_data_frame(df,under)
p1 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlim(0.26,0.3)+
xlab("CpG sites MSR")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn,":  \nfragments of 10,000 CpGs", "    \nr = ", round(cor(df$x,df$y),2) ,sep=""))
ylim(-4,16)
#ylab("true")+
#ggtitle(paste("\n",cn, ",  r=",round(cor(df[df$cell_name==cn,]$predicted, df[df$cell_name==cn,response_variable]),2), sep=""))
cn <- "GM12878"
df <- data.frame(x = data_tables[[cn]]$meth_autocorrelation, y= data_tables[[cn]]$log_total_pme_TPM)
df <- undersample_data_frame(df,under)
p2 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
#geom_smooth()+
xlab("meth autocorrelation")+
ylab(TeX(""))+
ylim(-4,16)+
ggtitle(paste(cn,":  \nfragments of 10,000 CpGs", "    \nr = ", round(cor(df$x,df$y),2) ,sep=""))
grid.arrange(p1,p2, ncol=2)
cn <- "H1"
under = 1000
df <- data.frame(x = data_tables[[cn]]$CGsites_msr, y= data_tables[[cn]]$log_total_pme_TPM)
df <- undersample_data_frame(df,under)
p1 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlim(0.26,0.3)+
xlab("CpG sites MSR")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn,":  \nfragments of 10,000 CpGs", "    \nr = ", round(cor(df$x,df$y),2) ,sep=""))
ylim(-4,16)
#ylab("true")+
#ggtitle(paste("\n",cn, ",  r=",round(cor(df[df$cell_name==cn,]$predicted, df[df$cell_name==cn,response_variable]),2), sep=""))
cn <- "GM12878"
df <- data.frame(x = data_tables[[cn]]$meth_autocorrelation, y= data_tables[[cn]]$log_total_pme_TPM)
df <- undersample_data_frame(df,under)
p2 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
#geom_smooth()+
xlab("meth autocorrelation")+
ylab(TeX(""))+
ylim(-4,16)+
ggtitle(paste(cn,":  \nfragments of 10,000 CpGs", "    \nr = ", round(cor(df$x,df$y),2) ,sep=""))
grid.arrange(p1,p2, ncol=2)
cn <- "H1"
under = 1000
df <- data.frame(x = data_tables[[cn]]$unmeth_msr, y= data_tables[[cn]]$log_total_pme_TPM)
df <- undersample_data_frame(df,under)
p1 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlim(0.26,0.3)+
xlab("CpG sites MSR")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn,":  \nfragments of 10,000 CpGs", "    \nr = ", round(cor(df$x,df$y),2) ,sep=""))
ylim(-4,16)
#ylab("true")+
#ggtitle(paste("\n",cn, ",  r=",round(cor(df[df$cell_name==cn,]$predicted, df[df$cell_name==cn,response_variable]),2), sep=""))
cn <- "GM12878"
df <- data.frame(x = data_tables[[cn]]$unmeth_msr, y= data_tables[[cn]]$log_total_pme_TPM)
df <- undersample_data_frame(df,under)
p2 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
#geom_smooth()+
xlab("meth autocorrelation")+
ylab(TeX(""))+
ylim(-4,16)+
ggtitle(paste(cn,":  \nfragments of 10,000 CpGs", "    \nr = ", round(cor(df$x,df$y),2) ,sep=""))
grid.arrange(p1,p2, ncol=2)
# predicted - true scatter
cn <- "H1"
under = 1000
df <- data.frame(x = data_tables[[cn]]$unmeth_msr, y= data_tables[[cn]]$log_total_pme_TPM)
df <- undersample_data_frame(df,under)
p1 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlim(0.26,0.3)+
xlab("CpG sites MSR")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn,":  \nfragments of 10,000 CpGs", "    \nr = ", round(cor(df$x,df$y),2) ,sep=""))
ylim(-4,16)
#ylab("true")+
#ggtitle(paste("\n",cn, ",  r=",round(cor(df[df$cell_name==cn,]$predicted, df[df$cell_name==cn,response_variable]),2), sep=""))
cn <- "GM12878"
df <- data.frame(x = data_tables[[cn]]$unmeth_msr, y= data_tables[[cn]]$meth_autocorrelation)
df <- undersample_data_frame(df,under)
p2 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
#geom_smooth()+
xlab("meth autocorrelation")+
ylab(TeX(""))+
ylim(-4,16)+
ggtitle(paste(cn,":  \nfragments of 10,000 CpGs", "    \nr = ", round(cor(df$x,df$y),2) ,sep=""))
grid.arrange(p1,p2, ncol=2)
# predicted - true scatter
cn <- "H1"
under = 1000
df <- data.frame(x = data_tables[[cn]]$unmeth_msr, y= data_tables[[cn]]$log_total_pme_TPM)
df <- undersample_data_frame(df,under)
p1 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
geom_smooth(method = lm)+
xlim(0.26,0.3)+
xlab("CpG sites MSR")+
ylab(TeX("$\\log_2$(pmeTPM)"))+
ggtitle(paste(cn,":  \nfragments of 10,000 CpGs", "    \nr = ", round(cor(df$x,df$y),2) ,sep=""))
#ylab("true")+
#ggtitle(paste("\n",cn, ",  r=",round(cor(df[df$cell_name==cn,]$predicted, df[df$cell_name==cn,response_variable]),2), sep=""))
cn <- "GM12878"
df <- data.frame(x = data_tables[[cn]]$unmeth_msr, y= data_tables[[cn]]$meth_autocorrelation)
df <- undersample_data_frame(df,under)
p2 <- ggplot(data = df, aes(x=x,y=y))+
geom_point(alpha=0.2)+
#geom_smooth()+
xlab("meth autocorrelation")+
ylab(TeX(""))+
ggtitle(paste(cn,":  \nfragments of 10,000 CpGs", "    \nr = ", round(cor(df$x,df$y),2) ,sep=""))
grid.arrange(p1,p2, ncol=2)
cor(data_tables$H1$CGsites_msr, data_tables$H1$meth_autocorrelation)
